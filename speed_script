# WARNING FUCK this shit uses walkspeed so stfu if no work and how'd u even get here but nvm
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

Rayfield:Notify({
   Title = "yo",
   Content = "use!1!1!!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local speed = Rayfield:CreateWindow({
   Name = "speed",
   LoadingTitle = "speed scrip",
   LoadingSubtitle = "by ca3r",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})



local main = speed:CreateTab("speed", 4483362458) -- Title, Image

local speedslider = main:CreateSlider({
   Name = "speed slider",
   Range = {0, 500},
   Increment = 1,
   Suffix = "ur walkspeed",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

local reset = main:CreateButton({
   Name = "reset walkspeed",
   Callback = function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
   end,
})

local info = speed:CreateTab("info", 4483362458) -- Title, Image

local infolabel = info:CreateLabel("made by ca3r on discord.")
local infolabel2 = info:CreateLabel("works not on all games!! (reminder)")
